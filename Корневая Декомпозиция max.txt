//Корневая Декомпозиция (MAXIMUM)


#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <set>
#include <stack>
#include <iterator>
#include <stdio.h>
#include <string>

using namespace std;

typedef long long ll;

int main() {
    cin.tie(0);
    cout.tie(0);
    ios_base::sync_with_stdio(false);
    int n = 1e5, k = sqrt(n);
    vector<int> a(n);
    vector<int> mx(k);
    for(int i = 0; i < n; i++) {
        mx[i/k] = max(mx[i/k], a[i]);
    }
    int m; //количество запросов
    cin >> m;
    for(int i = 0; i < m; i++) {
        int l,r;
        cin >> l >> r;
        //запрос максимума [l;r]
        int res = 0;
        while(l<=r) {
            if((l%k == 0) && ( l + k -1 <= r)) {
                res = max(res,mx[l/k]);
                l+=k;
            } else {
                res = max(res,a[l]);
                l++;
            }
        }
    }

    return 0;
}







